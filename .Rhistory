stat="identity") +
geom_blank(aes(x=level, y=1.1*prospects), stat="identity") +
scale_fill_brewer(type="div",
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
scale_y_continuous(expand=c(0,0)) +
facet_wrap(~type, ncol=2) +
labs(title="Major gift score distributions", x="", y="") +
theme_bw(16) +
theme(legend.position="bottom",
axis.ticks=element_blank(),
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_rect(colour="gray60",
size=.2))
ggplot(df) +
geom_bar(aes(x=type, y=prospects, fill=reorder(level, -as.numeric(level)), order=level),
colour="black",
stat="identity",
position="fill",
alpha=.7) +
labs(title="Major gift score distributions", x="", y="") +
#  geom_blank(aes(x=type, y=1.1*..count..), stat="bin") +
scale_fill_brewer(type="div",
palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme_bw(16) +
theme(legend.position="right",
axis.ticks=element_blank(),
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_blank())
ggplot(df) +
geom_bar(aes(x=type, y=prospects, fill=reorder(level, -as.numeric(level)), order=level),
colour="black",
stat="identity",
position="fill",
alpha=.7) +
labs(title="Major gift score distributions", x="", y="") +
geom_hline(yintercept=.5) +
#  geom_blank(aes(x=type, y=1.1*..count..), stat="bin") +
scale_fill_brewer(type="div",
palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme_bw(16) +
theme(legend.position="right",
axis.ticks=element_blank(),
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_blank())
ggplot(df) +
geom_bar(aes(x=type, y=prospects, fill=reorder(level, -as.numeric(level)), order=level),
colour="black",
stat="identity",
position="fill",
alpha=.7) +
labs(title="Major gift score distributions", x="", y="") +
geom_hline(yintercept=.5, colour="white", size=3) +
#  geom_blank(aes(x=type, y=1.1*..count..), stat="bin") +
scale_fill_brewer(type="div",
palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme_bw(16) +
theme(legend.position="right",
axis.ticks=element_blank(),
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_blank())
ggplot(df) +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))), colour="black", stat="identity", position="fill") +
coord_polar(theta="y") +
scale_fill_brewer(type="div", palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
facet_wrap(~type, ncol=2) +
labs(title="Major gift score distributions", x="", y="") +
theme_bw(16) +
theme(legend.position="bottom",
axis.ticks=element_blank(),
axis.text=element_blank(),
panel.grid=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot <- ggplot(df) +
scale_fill_brewer(type="div", palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
labs(title="Major Gift Score Distributions", x="", y="") +
theme_bw(16) +
theme(axis.ticks=element_blank(),
panel.margin = unit(2, "strwidth", "m"),
panel.border=element_blank())
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2)
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(axis.text=element_blank(),
panel.grid=element_blank())
base_plot +
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
alpha=.7,
stat="identity") +
geom_blank(aes(x=level, y=1.1*prospects), stat="identity") +
scale_y_continuous(expand=c(0,0)) +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank())
base_plot <- ggplot(df) +
scale_fill_brewer(type="div", palette=1,
guide=guide_legend(title="Major Gift Score",
override.aes=list(colour=NA, alpha=1))) +
labs(title="Major Gift Score Distributions", x="", y="") +
theme_bw(16) +
theme(axis.ticks=element_blank(),
panel.margin = unit(2, "strwidth", "m"))
base_plot +
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
alpha=.7,
stat="identity") +
geom_blank(aes(x=level, y=1.1*prospects), stat="identity") +
scale_y_continuous(expand=c(0,0)) +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=type, y=prospects, fill=reorder(level, -as.numeric(level)), order=level),
colour="black",
stat="identity",
position="fill",
alpha=.7) +
labs(title="Major gift score distributions", x="", y="") +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme(legend.position="right",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank())
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(axis.text=element_blank(),
panel.grid=element_blank())
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
nonstack <-
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
alpha=.7,
stat="identity")
# all stacked:
stacked_bar <-
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill")
base_plot + nonstack +
geom_blank(aes(x=level, y=1.1*prospects), stat="identity") +
scale_y_continuous(expand=c(0,0)) +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + stacked_bar +
labs(title="Major gift score distributions", x="", y="") +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme(legend.position="right",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank())
base_plot +
geom_bar(aes(x=type, y=prospects, fill=reorder(level, -as.numeric(level)), order=level),
colour="black",
stat="identity",
position="fill",
alpha=.7) +
labs(title="Major gift score distributions", x="", y="") +
scale_y_continuous(expand=c(0,0), labels=percent) +
theme(legend.position="right",
panel.grid.major.y=element_line(colour="gray40",
size=.1,
linetype="dashed"),
panel.grid.major.x=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank())
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
alpha=.7,
stat="identity",
position="fill")
coord_polar(theta="x")
base_plot +
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
alpha=.7,
stat="identity",
position="fill") +
coord_polar(theta="x")
base_plot + nonstack +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="x")
base_plot +
geom_bar(aes(x=reorder(level, -as.numeric(level)), y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot + nonstack +
coord_polar(theta="y") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
base_plot +
geom_bar(aes(x=1, y=prospects, fill=reorder(level, -as.numeric(level))),
colour="black",
stat="identity",
position="fill") +
coord_polar(theta="x") +
facet_wrap(~type, ncol=2) +
theme(legend.position="bottom",
axis.text=element_blank(),
panel.grid=element_blank(),
panel.border=element_rect(colour="gray60",
size=.2))
q()
q()
setwd("~/basketball statistics/nba/scrape pbp")
ESPNShot <- "http://sports.espn.go.com/nba/gamepackage/data/shot?gameId="
ESPNPbP <- "http://sports.espn.go.com/nba/playbyplay?gameId=__GAMEID__&period=0"
gameId <- "320223025"
getPbPData <- function(ESPNPbP, gameId) {
if (require(XML) & require(RCurl)) {
PbPURL <- sub("__GAMEID__", gameId, ESPNPbP)
PbP <- readHTMLTable(PbPURL, stringsAsFactors=FALSE)
# it's a bit of a hack to assume that this will always work
PbP <- PbP[[length(PbP)]]
return(PbP)
}
}
getShotData <- function(ESPNShot, gameId) {
if (require(XML) & require(RCurl)) {
shotURL <- paste(ESPNShot, gameId, sep="")
shots <- getURL(shotURL)
parsed_shots <- xmlParse(shots)
parsed_shots <- xmlToList(parsed_shots)
names(parsed_shots) <- sapply(parsed_shots, function(x) x["id"])
return(parsed_shots)
}
}
parseShotDesc <- function(shotDesc) {
sub("(Made|Miss) ([0-9]{1,2})ft (jumper|3-pointer) ([0-9]{1,2}):([0-9]{2})(.*)", "\\1;\\2;\\4;\\5", shotDesc)
}
cleanShotData <- function(shotData) {
df <- (do.call(rbind, shotData))
df <- data.frame(df, stringsAsFactors=FALSE)
df$x <- as.integer(df$x)
df$y <- as.integer(df$y)
df$pid <- as.factor(df$pid)
df$qtr <- as.integer(df$qtr)
df$t <- as.factor(df$t)
df$made <- as.logical(df$made)
df$y_adj <- ifelse(df$t=="h", 94-df$y, df$y)
df$x_adj <- ifelse(df$t=="h", 50-df$x, df$x)
parsed_desc <- parseShotDesc(df$d)
parsed_desc <- do.call(rbind, strsplit(parsed_desc, ";"))
df$made_basket <- parsed_desc[,1] == "Made"
df$dist <- as.integer(parsed_desc[,2])
df$min <- as.integer(parsed_desc[,3])
df$sec <- as.integer(parsed_desc[,4])
df$time <- df$min*60 + df$sec
return(df)
}
cleanPbP <- function(PbP) {
PbP <- PbP[grep(":", PbP$TIME),]
rownames(PbP) <- seq(nrow(PbP))
times <- do.call(rbind, strsplit(PbP$TIME, ":"))
PbP$seconds_left <- (as.integer(times[,1]) *60) + as.integer(times[,2])
return(PbP)
}
PbP <- getPbPData(ESPNPbP, gameId)
PbP_clean <- cleanPbP(PbP)
shotRaw <- getShotData(ESPNShot, gameId)
shotDF <- cleanShotData(shotRaw)
head(PbP_clean)
head(PbP)
head(PbP_clean)
nrow(PbP_clean)
nrow(PbP)
grep(":", PbP$TIME)
!grep(":", PbP$TIME)
!grepl(":", PbP$TIME)
grepl(":", PbP$TIME)
!grepl(":", PbP$TIME)
PbP[!grepl(":", PbP$TIME),]
PbP[grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean),]
grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean)
PbP_clean[grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean),]
head(PbP_clean)
PbP[grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP),]
PbP_clean[grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean[,2]),]
PbP_clean[grepl("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean[,2]),]
grepl("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean[,2])
grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean[,2])
sub("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", "\\2" PbP_clean[,2])
sub("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", "\\2", PbP_clean[,2])
sub("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", "\\2", PbP_clean[,2])
grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP_clean[,2])
head(shotDF)
shotDF
head(PbP_clean)
PbP_clean
tail(shotDF)
grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP[,2])
PbP[grep("(Start|End) of the ([0-9])(st|nd|rd|th) (Quarter|Overtime)", PbP[,2]),]
q()
